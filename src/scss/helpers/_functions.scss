@use 'sass:list';
@use 'sass:math';

@function map-set($map, $key, $value) {
	$new: (
		$key: $value,
	);
	@return map-merge($map, $new);
}

@function cut-border($topLeft: 12px, $bottomRight: $topLeft, $bottomLeft: $bottomRight, $topRight: $topLeft) {
	$tl: $topLeft;
	$br: $bottomRight;
	$bl: $bottomLeft;
	$tr: $topRight;

	$clipTL: (math.round($tl) 0%, calc(100% - #{math.round($tr)}) 0%);
	$clipTR: (100% math.round($tr), 100% calc(100% - #{math.round($br)}));
	$clipBR: (calc(100% - #{math.round($br)}) 100%, math.round($bl) 100%);
	$clipBL: (0% calc(100% - #{math.round($bl)}), 0% math.round($tl));

	$topPoints: list.join($clipTL, $clipTR);
	$bottomPoints: list.join($clipBR, $clipBL);
	$polygon: list.join($topPoints, $bottomPoints);

	@return polygon($polygon);
}

@function getBevelInnerPath($size, $offset) {
	$v0: math.round($offset);
	$v1: $v0 * math.sqrt(2);
	$w: math.round($size + $v1 - $v0);

	$cords: (
		'p0': $v1,
		'p1': $w,
		'p2': calc(100% - #{$w}),
		'p3': calc(100% - #{$v1}),
	);

	@return (
		map-get($cords, 'p1') map-get($cords, 'p3'),
		map-get($cords, 'p0') map-get($cords, 'p2'),
		map-get($cords, 'p0') map-get($cords, 'p1'),
		map-get($cords, 'p1') map-get($cords, 'p0'),
		map-get($cords, 'p2') map-get($cords, 'p0'),
		map-get($cords, 'p3') map-get($cords, 'p1'),
		map-get($cords, 'p3') map-get($cords, 'p2'),
		map-get($cords, 'p2') map-get($cords, 'p3'),
		map-get($cords, 'p1') map-get($cords, 'p3')
	);
}

@function getBevelPath($size: 12px, $offset: 0px) {
	$cords: (
		'p0': 0px,
		'p1': math.round($size),
		'p2': calc(100% - #{math.round($size)}),
		'p3': 100%,
	);

	$mergePoint: map-get($cords, 'p1') map-get($cords, 'p3');

	$tl: (map-get($cords, 'p1') map-get($cords, 'p0'), map-get($cords, 'p0') map-get($cords, 'p1'));
	$bl: (map-get($cords, 'p0') map-get($cords, 'p2'), $mergePoint);

	$br: (map-get($cords, 'p2') map-get($cords, 'p3'), map-get($cords, 'p3') map-get($cords, 'p2'));
	$tr: (map-get($cords, 'p3') map-get($cords, 'p1'), map-get($cords, 'p2') map-get($cords, 'p0'));
	$outerFirst: list.join($tl, $bl);
	$outerLast: list.join($br, $tr);
	$innerFrame: getBevelInnerPath($size, $offset);

	@if ($offset > 0px) {
		@return $outerFirst, $innerFrame, $mergePoint, $outerLast;
	} @else {
		@return $outerFirst, $outerLast;
	}
}

@function slice-border($size: 12px, $width: 1px) {
	$polygon: getBevelPath($size, $width);
	@return polygon($polygon);
}
